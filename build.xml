<project name="mgdb" default="compile" basedir=".">
    <property file="build.properties"/>

    <!-- init target makes the directory structure. You may not
         require this if you set your environment up by hand. -->
    <target name="init">
        <tstamp/>
        <mkdir dir="lib"/>
        <mkdir dir="${classes.dir}"/>
        <mkdir dir="${javadoc.dir}"/>
        <mkdir dir="${properties.dir}"/>
    </target>
    
    <!-- Compiles your java files and puts the classes in classes.dir -->
    <target name="targets">
        <echo message="Targets are clean, deploy, javadoc, runTests, targets"/>
    </target>

    <!-- Compiles your java files and puts the classes in classes.dir -->
    <target name="compile" depends="init">
        <javac
            srcdir="${src.dir}"
            destdir="${classes.dir}">
            <!-- Make sure you set your classpath! -->
            <classpath>
                <fileset dir="${lib.dir}" includes="*.jar"/>
                <fileset dir="${tomcat.home}/lib" includes="servlet-api.jar"/>
                <pathelement path="${classes.dir}" />
            </classpath>
        </javac>
    </target>

    <!-- deploy our tomcat -->
    <target name="deploy" depends="dist">
        <echo message="Deploying to tomcat at ${tomcat.home}"/>
        <copy file="${dist.jar}" todir="${tomcat.home}/webapps" overwrite="yes"/>
    </target>

    <target name="deploy-port1" depends="dist">
        <antcall target="deploy">
            <param name="port" value="${tomcat.port1}"/>
        </antcall>
    </target>
    <target name="deploy-port2" depends="dist">
        <antcall target="deploy">
            <param name="port" value="${tomcat.port2}"/>
        </antcall>
    </target>
    <target name="deploy-all" depends="dist">
        <antcall target="deploy-port1"/>
        <antcall target="deploy-port2"/>
    </target>

    <target name="build" depends="compile">
        <mkdir dir="${build.home}"/>
        <mkdir dir="${build.home}/WEB-INF"/>

        <copy todir="${build.home}/WEB-INF">
            <fileset dir="." includes="${classes.dir}/**,${lib.dir}/**" excludes="${classes.dir}/driver/**"/>
        </copy>

        <copy todir="${build.home}/WEB-INF/${classes.dir}">
            <fileset dir="${properties.dir}"/>
        </copy>

        <copy todir="${build.home}">
            <fileset dir="${resources.dir}" includes="**/*.properties, *.html, *.jsp, *.ftl"/>
        </copy>

        <copy file="web.xml" tofile="${build.home}/WEB-INF/web.xml"/>
        <copy file="${resources.dir}/index.html" tofile="${build.home}/index.html"/>
    </target>

    <!-- This example dist target merely jars up the webapp files. -->
    <target name="dist" depends="build">
        <jar destfile="${dist.jar}" basedir="${build.home}">
        </jar>
    </target>

    <!-- submit creates a single jarfile that you will upload to the
         Gradebook channel on the class portal. -->
    <target name="submit" depends="dist,javadoc">
        <jar destfile="${submit.jar}" basedir="." includes="README.txt,build.properties,build.xml,web.xml,${src.dir}/**,${docs.dir}/**,${javadoc.dir}/**,${properties.dir}/**,${lib.dir}/**,${classes.dir}/**">
        </jar>
    </target>

    <!-- Run javadoc on your java source code -->
    <target name="javadoc" depends="init">
        <javadoc packagenames="*"
                 sourcepath="src/java"
                 destdir="javadoc"
                 author="true"
                 version="true"
                 windowtitle="Lab 1 Servlets"
                 doctitle="InClass"
                 bottom="Copyright 2019 Joshua Goralczyk" />
    </target>

    <!-- Clean -->
    <target name="clean" depends="cleanTests">
        <delete file="${dist.jar}"/>
        <delete file="${tomcat.home}/webapps/${dist.jar}"/>
        <delete dir="${build.home}"/>
        <delete dir="${classes.dir}"/>
    </target>

    <!-- unit tests-->
    <path id="src.path">
        <pathelement path="src/"/>
    </path>

    <path id="compile.path">
        <path refid="src.path"/>
        <fileset dir="lib/">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <path id="unit.test.path">
        <path refid="compile.path"/>
        <pathelement path="test/"/>
    </path>

    <target name="cleanTests" description="removes all class files from test directory">
        <delete
            includeEmptyDirs="true"
            failonerror="false">
            <fileset dir="test/" includes="**/*.class"/>
            <fileset dir="test/build"/>
        </delete>
    </target>
    
    <target name="compileSrcAndTest" depends="cleanTests">
        <javac
            includeantruntime="false"
            destdir="test">
            <src path="src"/>
            <classpath refid="compile.path"/>
        </javac>
    </target>

    <target name="compileTests" depends="compileSrcAndTest" description="compile jUnit Test cases">
        <javac
            includeantruntime="false"
            srcdir="${test-junit-dir}"
            destdir="${test-junit-dir}">
                <classpath refid="unit.test.path"/>
        </javac>
        
        <mkdir dir="test/build/classes"/>
        <javac
            includeantruntime="false"
            srcdir="test/sql"
            destdir="test/build/classes"
            classpathref="compile.path"/>
            
        <mkdir dir="test/build/jar"/>
        <jar
            destfile="test/build/jar/TestsSQL.jar"
            basedir="test/build/classes">
            <manifest>
                <attribute name="Main-Class" value="DatabaseExport"/>
            </manifest>
        </jar>
        
    </target>

    <target name="runTests" depends="compileTests">
        <java jar="test/build/jar/TestsSQL.jar" fork="true"/>
        <junit>
            <classpath>
                <pathelement location="test/" />
                <pathelement location="lib/hamcrest-all-1.3.jar" />
                <pathelement location="lib/javax.servlet-api-3.0.1.jar"/>
                <pathelement location="lib/dbunit-2.6.0.jar"/>
                <pathelement location="lib/junit-4.13-beta-2.jar" />
                <pathelement location="lib/slf4j-api-1.7.25.jar" />
                <pathelement location="lib/slf4j-jdk14-1.7.25.jar" />
                <pathelement location="lib/mysql-connector-java-5.1.45-bin.jar" />
            </classpath>
            <batchtest fork="yes" todir="${src.dir}">
                <fileset dir="${test-junit-dir}">
                    <include name="**/*Test*" />

                </fileset>
            </batchtest>
            <formatter type="brief" usefile="false"/>
        </junit>
    </target>

    <!-- Clean all -->
    <target name="cleanall" depends="clean">
        <delete dir="${javadoc.dir}"/>
        <delete file="${submit.jar}"/>
    </target>

</project>
